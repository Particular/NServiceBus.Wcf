[assembly: System.Runtime.CompilerServices.InternalsVisibleToAttribute(@"NServiceBus.Wcf.Tests, PublicKey=00240000048000009400000006020000002400005253413100040000010001007f16e21368ff041183fab592d9e8ed37e7be355e93323147a1d29983d6e591b04282e4da0c9e18bd901e112c0033925eb7d7872c2f1706655891c5c9d57297994f707d16ee9a8f40d978f064ee1ffc73c0db3f4712691b23bf596f75130f4ec978cf78757ec034625a5f27e6bb50c618931ea49f6f628fd74271c32959efb1c5")]
[assembly: System.Runtime.Versioning.TargetFrameworkAttribute(".NETFramework,Version=v4.5.2", FrameworkDisplayName=".NET Framework 4.5.2")]
namespace NServiceBus
{
    public class BindingConfiguration
    {
        public BindingConfiguration(System.ServiceModel.Channels.Binding binding) { }
        public BindingConfiguration(System.ServiceModel.Channels.Binding binding, System.Uri address) { }
        public System.Uri Address { get; }
        public System.ServiceModel.Channels.Binding Binding { get; }
    }
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://nservicebus.com")]
    public interface IWcfService<in TRequest, TResponse>
    {
        [System.ServiceModel.OperationContractAttribute()]
        System.Threading.Tasks.Task<TResponse> Process(TRequest request);
    }
    public class static WcfEndpointConfigurationExtensions
    {
        public static NServiceBus.WcfSettings Wcf(this NServiceBus.EndpointConfiguration configuration) { }
    }
    [System.ServiceModel.ServiceBehaviorAttribute(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.PerCall)]
    public abstract class WcfService<TRequest, TResponse> : NServiceBus.IWcfService<TRequest, TResponse>
    {
        protected WcfService() { }
    }
    public class WcfSettings : NServiceBus.Configuration.AdvancedExtensibility.ExposeSettings
    {
        public NServiceBus.WcfSettings Binding(System.Func<System.Type, NServiceBus.BindingConfiguration> provider) { }
        public NServiceBus.WcfSettings CancelAfter(System.Func<System.Type, System.TimeSpan> provider) { }
        public NServiceBus.WcfSettings RouteWith(System.Func<System.Type, System.Func<NServiceBus.SendOptions>> provider) { }
    }
}